{"ast":null,"code":"import { authConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post('/signin', { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'Failed to Login'\n        }\n      });\n    }\n  };\n};\nexport const Signout = () => {\n  return async dispatch => {\n    localStorage.clear();\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n  };\n};","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/actions/auth.actions.js"],"names":["authConstants","axios","login","user","console","log","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem","parse","Signout","clear","LOGOUT_REQUEST"],"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAQ,MAAMC,KAAK,GAAGC,IAAD,IAAS;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEE,SAAQ,MAAOG,QAAP,IAAmB;AAEzBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,aAAa,CAACQ;AAArB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,SAAX,EAAsB,EACtC,GAAGP;AADmC,KAAtB,CAAlB;;AAKA,QAAGM,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAEpB,YAAK;AAACC,QAAAA,KAAD;AAAOT,QAAAA;AAAP,UAAeM,GAAG,CAACI,IAAxB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,KAA7B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAed,IAAf,CAA5B;AAEAG,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,aAAa,CAACkB,aADb;AAEPC,QAAAA,OAAO,EAAC;AACNP,UAAAA,KADM;AACAT,UAAAA;AADA;AAFD,OAAD,CAAR;AAMD,KAZD,MAYK;AACH,UAAGM,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AACpBL,QAAAA,QAAQ,CAAC;AACNC,UAAAA,IAAI,EAACP,aAAa,CAACoB,aADb;AAEND,UAAAA,OAAO,EAAC;AAACE,YAAAA,KAAK,EAAEZ,GAAG,CAACI,IAAJ,CAASQ;AAAjB;AAFF,SAAD,CAAR;AAID;AACF;AAGF,GA9BD;AA+BH,CAnCO;AA0CR,OAAO,MAAMC,cAAc,GAAG,MAAK;AAC3B,SAAO,MAAMhB,QAAN,IAAiB;AACtB,UAAMM,KAAK,GAAGE,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGX,KAAH,EAAS;AACP,YAAMT,IAAI,GAAGa,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACS,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAjB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,aAAa,CAACkB,aADb;AAEXC,QAAAA,OAAO,EAAC;AACNP,UAAAA,KADM;AACAT,UAAAA;AADA;AAFG,OAAD,CAAR;AAMD,KARD,MAQK;AAEDG,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAACP,aAAa,CAACoB,aADZ;AAEPD,QAAAA,OAAO,EAAC;AAACE,UAAAA,KAAK,EAAE;AAAR;AAFD,OAAD,CAAR;AAKH;AAEF,GAnBD;AAoBP,CArBM;AAuBP,OAAO,MAAMI,OAAO,GAAG,MAAK;AAC1B,SAAO,MAAMnB,QAAN,IAAiB;AACtBQ,IAAAA,YAAY,CAACY,KAAb;AACApB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAACP,aAAa,CAAC2B;AADZ,KAAD,CAAR;AAGD,GALD;AAMD,CAPM","sourcesContent":["import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport  const login =(user) =>{\r\n\r\n  console.log(user);\r\n\r\n    return  async (dispatch) =>{\r\n\r\n      dispatch({type: authConstants.LOGIN_REQUEST});\r\n      const res = await axios.post('/signin', {\r\n        ...user\r\n      })\r\n\r\n\r\n      if(res.status === 200){\r\n        \r\n        const{token,user} = res.data;\r\n        localStorage.setItem('token',token);\r\n        localStorage.setItem('user',JSON.stringify(user));\r\n        \r\n        dispatch({\r\n          type: authConstants.LOGIN_SUCCESS,\r\n          payload:{\r\n            token,user\r\n          }\r\n        });\r\n      }else{\r\n        if(res.status === 400){\r\n          dispatch({\r\n             type:authConstants.LOGIN_FAILURE,\r\n             payload:{error: res.data.error}\r\n          });\r\n        }\r\n      }\r\n      \r\n       \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const isUserLoggedIn = () =>{\r\n        return async dispatch =>{\r\n          const token = localStorage.getItem('token');\r\n          if(token){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n              type: authConstants.LOGIN_SUCCESS,\r\n          payload:{\r\n            token,user\r\n              }\r\n            });\r\n          }else{\r\n            \r\n              dispatch({\r\n                type:authConstants.LOGIN_FAILURE,\r\n                payload:{error: 'Failed to Login'}\r\n              \r\n            });\r\n          }\r\n\r\n        }\r\n}\r\n\r\nexport const Signout = () =>{\r\n  return async dispatch =>{\r\n    localStorage.clear();\r\n    dispatch({\r\n      type:authConstants.LOGOUT_REQUEST\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}