{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Category\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCategory } from '../../actions/';\nimport Input from '../../components/UI/Input';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAdd, IoIosTrash, IoIosCloudUpload } from 'react-icons/io';\n/**\r\n* @author\r\n* @function Category\r\n**/\n\nconst Category = props => {\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    /*  const cat ={\r\n        categoryName,\r\n        parentCategoryId,\r\n        categoryImage\r\n    };\r\n    console.log(cat);  */\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, index) => index == index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, index) => index == index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const renderUpdateCategoriesModal = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: updateCategoryModal,\n      handleClose: () => setUpdateCategoryModal(false),\n      modalTitle: 'Update Categories',\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Expanded\"))), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Category Name\",\n      placeholder: 'Category Name',\n      value: item.name,\n      onChange: e => handleCategoryInput('name', e.target.value, index, 'expanded'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: item.parentId,\n      onChange: e => handleCategoryInput('parentId', e.target.value, index, 'expanded'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, \"select category\"), createCategoryList(category.categories).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, \"Select Type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"store\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }, \"Store\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, \"Page\"))))), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"Checked Categories\"), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Category Name\",\n      placeholder: 'Category Name',\n      value: item.name,\n      onChange: e => handleCategoryInput('name', e.target.value, index, 'checked'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: item.parentId,\n      onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }, \"select category\"), createCategoryList(category.categories).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 45\n      }\n    }, option.name)))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, \"Select Type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"store\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, \"Store\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, \"Page\"))))));\n  };\n\n  const renderAddCategoryModal = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: 'Add New Category',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Category Name\",\n      placeholder: 'Category Name',\n      value: categoryName,\n      onChange: e => setCategoryName(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      value: parentCategoryId,\n      onChange: e => setParentCategoryId(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, \"select category\"), createCategoryList(category.categories).map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, option.name))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"categoryImage\",\n      onChange: handleCategoryImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    sidebar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, \"Add\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxTree, {\n    nodes: renderCategories(category.ctaegories),\n    checked: checked,\n    expanded: expanded,\n    onCheck: checked => setChecked(checked),\n    onExpand: expanded => setExpanded(expanded),\n    icons: {\n      check: /*#__PURE__*/React.createElement(IoIosCheckbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 40\n        }\n      }),\n      uncheck: /*#__PURE__*/React.createElement(IoIosCheckboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 42\n        }\n      }),\n      halfCheck: /*#__PURE__*/React.createElement(IoIosCheckboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 44\n        }\n      }),\n      expandClose: /*#__PURE__*/React.createElement(IoIosArrowForward, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 46\n        }\n      }),\n      expandOpen: /*#__PURE__*/React.createElement(IoIosArrowDown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 45\n        }\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, \"Edit\")))), renderAddCategoryModal(), renderUpdateCategoriesModal());\n};\n\nexport default Category;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Layout","Container","Row","Col","useDispatch","useSelector","addCategory","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAdd","IoIosTrash","IoIosCloudUpload","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","dispatch","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","forEach","categoryId","index","find","_index","console","log","handleCategoryInput","key","type","updatedCheckedArray","map","item","updatedExpandedArray","renderUpdateCategoriesModal","option","renderAddCategoryModal","display","justifyContent","ctaegories","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Row, Col, } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCategory } from '../../actions/';\r\nimport Input from '../../components/UI/Input';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\n\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n    IoIosCloudUpload\r\n} from 'react-icons/io'\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        /*  const cat ={\r\n            categoryName,\r\n            parentCategoryId,\r\n            categoryImage\r\n        };\r\n        console.log(cat);  */\r\n        setShow(false);\r\n    }\r\n\r\n\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n            );\r\n        }\r\n        return myCategories;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name, parentId: category.parentId });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n    }\r\n\r\n    const updateCategory = () => {\r\n        setUpdateCategoryModal(true);\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value)\r\n            category && checkedArray.push(category);\r\n        })\r\n\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value)\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n\r\n        console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n    }\r\n\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, index) => index == index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckedArray);\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, index) => index == index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n    }\r\n\r\n    const renderUpdateCategoriesModal = () => {\r\n        return (\r\n            < Modal\r\n                show={updateCategoryModal}\r\n                handleClose={() => setUpdateCategoryModal(false)}\r\n                modalTitle={'Update Categories'}\r\n                size=\"lg\"\r\n            >\r\n                <Row>\r\n                    <Col>\r\n                        <h6>Expanded</h6>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {\r\n                    expandedArray.length > 0 &&\r\n                    expandedArray.map((item, index) =>\r\n                        <Row key={index} >\r\n                            <Col>\r\n                                <Input\r\n                                    label=\"Category Name\"\r\n                                    placeholder={'Category Name'}\r\n                                    value={item.name}\r\n                                    onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\r\n\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    value={item.parentId}\r\n                                    onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}\r\n                                >\r\n                                    <option>select category</option>\r\n                                    {\r\n                                        createCategoryList(category.categories).map(option =>\r\n                                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                                    }\r\n                                </select>\r\n                            </Col>\r\n                            <Col>\r\n                                <select className=\"form-control\">\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"store\">Store</option>\r\n                                    <option value=\"product\">Product</option>\r\n                                    <option value=\"page\">Page</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n                <h6>Checked Categories</h6>\r\n                {\r\n                    checkedArray.length > 0 &&\r\n                    checkedArray.map((item, index) =>\r\n                        <Row key={index} >\r\n                            <Col>\r\n                                <Input\r\n                                    label=\"Category Name\"\r\n                                    placeholder={'Category Name'}\r\n                                    value={item.name}\r\n                                    onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\r\n\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    value={item.parentId}\r\n                                    onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}\r\n                                >\r\n                                    <option>select category</option>\r\n                                    {\r\n                                        createCategoryList(category.categories).map(option =>\r\n                                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                                    }\r\n                                </select>\r\n                            </Col>\r\n                            <Col>\r\n                                <select className=\"form-control\">\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"store\">Store</option>\r\n                                    <option value=\"product\">Product</option>\r\n                                    <option value=\"page\">Page</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n                {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />  */}\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n\r\n    const renderAddCategoryModal = () => {\r\n        return (\r\n            <Modal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                modalTitle={'Add New Category'}\r\n            >\r\n                <Input\r\n                    label=\"Category Name\"\r\n                    placeholder={'Category Name'}\r\n                    value={categoryName}\r\n                    onChange={(e) => setCategoryName(e.target.value)}\r\n\r\n                />\r\n                <select\r\n                    className=\"form-control\"\r\n                    value={parentCategoryId}\r\n                    onChange={(e) => setParentCategoryId(e.target.value)}\r\n                >\r\n                    <option>select category</option>\r\n                    {\r\n                        createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n                <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <button onClick={handleShow}>Add</button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {/*  <ul>\r\n                        {renderCategories(category.categories)}\r\n\r\n                    </ul> */}\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.ctaegories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />,\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <button>Delete</button>\r\n                        <button onClick={updateCategory}>Edit</button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {renderAddCategoryModal()}\r\n            {renderUpdateCategoriesModal()}\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}