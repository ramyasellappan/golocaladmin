{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Signin\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { login } from '../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik, useFormik } from 'formik';\nimport * as yup from 'yup';\n/**\r\n* @author\r\n* @function Signin\r\n**/\n\nconst Signin = props => {\n  {\n    /*const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');*/\n  }\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  {\n    /*const userLogin = (e) => {\r\n    \n     e.preventDefault();\r\n       const user = {\r\n       email, password\r\n     }\r\n       dispatch(login(user));\r\n    }\r\n    */\n  }\n  {\n    /*const formik = useFormik({\r\n     initialValues: {\r\n       email: '',\r\n       password: ''\r\n     },\r\n     validationSchema: Yup.object({\r\n         email: Yup.string().email('Invalid email address').required('Required'),\r\n       password: Yup.string()\r\n         .min(5, 'Minimun 5 chars')\r\n         .required('Required'),\r\n       }),\r\n     onSubmit:\r\n       values => {\r\n         dispatch(login(values));\r\n       },\r\n    });\r\n    */\n  }\n  const schema = yup.object({\n    email: yup.string().required(),\n    password: yup.string().required()\n  });\n\n  if (auth.authenticate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Signin/index.js"],"names":["React","useEffect","useState","Layout","Container","Form","Row","Col","Button","Input","login","useSelector","useDispatch","Redirect","Formik","useFormik","yup","Signin","props","auth","state","dispatch","schema","object","email","string","required","password","authenticate","marginTop","span","offset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,iBAAlD;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,EAAgBC,SAAhB,QAAiC,QAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAGA;;;;;AAKA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB;AAAC;;;AAEuC;AAGxC,QAAMC,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,QAAQ,GAAGT,WAAW,EAA5B;AACA;AAAC;;;;;;;;;AAWA;AACD;AAAC;;;;;;;;;;;;;;;;;AAmBA;AAEH,QAAMU,MAAM,GAAGN,GAAG,CAACO,MAAJ,CAAW;AACxBC,IAAAA,KAAK,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb,EADiB;AAExBC,IAAAA,QAAQ,EAAEX,GAAG,CAACS,MAAJ,GAAaC,QAAb;AAFc,GAAX,CAAf;;AAOE,MAAIP,IAAI,CAACS,YAAT,EAAuB;AACrB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAmCD,CAxFD;;AA0FA,eAAed,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport { login } from '../../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik,useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\n\r\n/**\r\n* @author\r\n* @function Signin\r\n**/\r\n\r\nconst Signin = (props) => {\r\n\r\n  {/*const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\nconst [error, setError] = useState('');*/}\r\n\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  {/*const userLogin = (e) => {\r\n\r\n\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      email, password\r\n    }\r\n\r\n    dispatch(login(user));\r\n  }\r\n*/}\r\n  {/*const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n\r\n      email: Yup.string().email('Invalid email address').required('Required'),\r\n      password: Yup.string()\r\n        .min(5, 'Minimun 5 chars')\r\n        .required('Required'),\r\n\r\n    }),\r\n    onSubmit:\r\n      values => {\r\n        dispatch(login(values));\r\n      },\r\n  });\r\n\r\n*/}\r\n\r\nconst schema = yup.object({\r\n  email: yup.string().required(),\r\n  password: yup.string().required(),\r\n \r\n});\r\n\r\n\r\n  if (auth.authenticate) {\r\n    return <Redirect to={'/'} />\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row style={{ marginTop: '50px' }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            {/*}\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n              <label htmlFor=\"email\">Email Address</label>\r\n              <input id=\"email\" type=\"email\"\r\n             {...formik.getFieldProps('email')} />\r\n\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div>{formik.errors.email}</div>\r\n              ) : null}\r\n             <br/>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input id=\"password\" type=\"password\" {...formik.getFieldProps('password')} />\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div>{formik.errors.password}</div>\r\n              ) : null}\r\n              <br />\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n              */}\r\n\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    </Layout>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Signin;"]},"metadata":{},"sourceType":"module"}