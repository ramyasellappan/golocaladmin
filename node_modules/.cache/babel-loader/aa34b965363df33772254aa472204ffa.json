{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Category\\\\index.js\";\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from '../../actions/';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAdd, IoIosTrash, IoIosCloudUpload } from 'react-icons/io';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n/**\r\n* @author\r\n* @function Category\r\n**/\n\nconst Category = props => {\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (categoryName === \"\") {\n      alert(\"Catogory Name is required\");\n      return;\n    }\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form));\n    setUpdateCategoryModal(false);\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n\n    setDeleteCategoryModal(false);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: deleteCategories\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Expanded\"), expandedArray.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 56\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \"Checked\"), checkedArray.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 55\n      }\n    }, item.name)));\n  };\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/React.createElement(Layout, {\n    sidebar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actionBtnContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, \"Actions:\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IoIosAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 62\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 75\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IoIosTrash, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 66\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 81\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IoIosCloudUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 66\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 87\n    }\n  }, \"Edit\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxTree, {\n    nodes: renderCategories(category.categories),\n    checked: checked,\n    expanded: expanded,\n    onCheck: checked => setChecked(checked),\n    onExpand: expanded => setExpanded(expanded),\n    icons: {\n      check: /*#__PURE__*/React.createElement(IoIosCheckbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 40\n        }\n      }),\n      uncheck: /*#__PURE__*/React.createElement(IoIosCheckboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 42\n        }\n      }),\n      halfCheck: /*#__PURE__*/React.createElement(IoIosCheckboxOutline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 44\n        }\n      }),\n      expandClose: /*#__PURE__*/React.createElement(IoIosArrowForward, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 46\n        }\n      }),\n      expandOpen: /*#__PURE__*/React.createElement(IoIosArrowDown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 45\n        }\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(AddCategoryModal, {\n    show: show,\n    handleClose: () => setShow(false),\n    onSubmit: handleClose,\n    modalTitle: 'Add New Category',\n    categoryName: categoryName,\n    setCategoryName: setCategoryName,\n    parentCategoryId: parentCategoryId,\n    setParentCategoryId: setParentCategoryId,\n    categoryList: categoryList,\n    handleCategoryImage: handleCategoryImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UpdateCategoriesModal, {\n    show: updateCategoryModal,\n    handleClose: updateCategoriesForm,\n    modalTitle: 'Update Categories',\n    size: \"lg\",\n    expandedArray: expandedArray,\n    checkedArray: checkedArray,\n    handleCategoryInput: handleCategoryInput,\n    categoryList: categoryList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }), renderDeleteCategoryModal());\n};\n\nexport default Category;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Category/index.js"],"names":["React","useState","Layout","Container","Row","Col","useDispatch","useSelector","addCategory","getAllCategory","updateCategories","deleteCategories","deleteCategoriesAction","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAdd","IoIosTrash","IoIosCloudUpload","UpdateCategoriesModal","AddCategoryModal","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","handleClose","form","FormData","alert","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","deleteCategory","checkedIdsArray","expandedIdsArray","idsArray","concat","then","result","renderDeleteCategoryModal","color","onClick","categoryList","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Row, Col, } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addCategory,\r\n    getAllCategory,\r\n    updateCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../actions/';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\n\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n    IoIosCloudUpload\r\n} from 'react-icons/io'\r\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\r\nimport AddCategoryModal from './components/AddCategoryModal';\r\nimport './style.css';\r\n\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n\r\n         if(categoryName === \"\"){\r\n            alert(\"Catogory Name is required\");\r\n            return;\r\n        } \r\n\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = [];\r\n        for (let category of categories) {\r\n            myCategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n            );\r\n        }\r\n        return myCategories;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n\r\n        for (let category of categories) {\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name,\r\n                parentId: category.parentId,\r\n                type: category.type\r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n    }\r\n\r\n    const updateCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setUpdateCategoryModal(true);\r\n    }\r\n\r\n    const updateCheckedAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId === category.value);\r\n            category && checkedArray.push(category);\r\n        })\r\n\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId === category.value);\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n\r\n\r\n    }\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type === \"checked\") {\r\n            const updatedCheckedArray = checkedArray.map((item, _index) => \r\n            index === _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckedArray);\r\n        } else if (type === \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n             index === _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n    }\r\n\r\n\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        dispatch(updateCategories(form));\r\n        setUpdateCategoryModal(false);\r\n    }\r\n\r\n\r\n    const deleteCategory = () => {\r\n        updateCheckedAndExpandedCategories();\r\n        setDeleteCategoryModal(true);\r\n    }\r\n    const deleteCategories = () => {\r\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\r\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\r\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n        if (checkedIdsArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdsArray))\r\n                .then(result => {\r\n                    if (result) {\r\n                        dispatch(getAllCategory())\r\n                        setDeleteCategoryModal(false)\r\n                    }\r\n                });\r\n        }\r\n        setDeleteCategoryModal(false);\r\n\r\n\r\n    }\r\n\r\n    const renderDeleteCategoryModal = () => {\r\n        return (\r\n            <Modal\r\n                modalTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onClick: () => {\r\n                            alert('no');\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Yes',\r\n                        color: 'danger',\r\n                        onClick: deleteCategories\r\n                    }\r\n                ]}\r\n            >\r\n                <h5>Expanded</h5>\r\n                {\r\n                    expandedArray.map((item, index) => <span key={index}>{item.name}</span>)\r\n                }\r\n                <h5>Checked</h5>\r\n                {\r\n                    checkedArray.map((item, index) => <span key={index}>{item.name}</span>)\r\n                }\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    const categoryList = createCategoryList(category.categories);\r\n\r\n\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <div className=\"actionBtnContainer\">\r\n                                <span>Actions:</span>\r\n                                <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\r\n                                <button onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></button>\r\n                                <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />,\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <AddCategoryModal\r\n                show={show}\r\n                handleClose={() =>setShow(false)}\r\n                onSubmit={handleClose}\r\n                modalTitle={'Add New Category'}\r\n                categoryName={categoryName}\r\n                setCategoryName={setCategoryName}\r\n                parentCategoryId={parentCategoryId}\r\n                setParentCategoryId={setParentCategoryId}\r\n                categoryList={categoryList}\r\n                handleCategoryImage={handleCategoryImage}\r\n            />\r\n\r\n            <UpdateCategoriesModal\r\n                show={updateCategoryModal}\r\n                handleClose={updateCategoriesForm}\r\n                modalTitle={'Update Categories'}\r\n                size=\"lg\"\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                handleCategoryInput={handleCategoryInput}\r\n                categoryList={categoryList}\r\n            />\r\n\r\n\r\n            {renderDeleteCategoryModal()}\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}