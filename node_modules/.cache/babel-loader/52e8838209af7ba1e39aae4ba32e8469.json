{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { categoryConstants } from \"./constants\";\n\nconst getAllCategory = () => {\n  console.log(\"I am working1 Entering dispatch\");\n  return async dispatch => {\n    console.log(\"I am working2 in dispatch\");\n    dispatch({\n      type: categoryConstants.GET_ALL_CATEGORIES_REQUEST\n    });\n    const res = await axios.get('/category/getcategory');\n    console.log(res);\n    console.log(\"I am working3 dispatch cmpleted\");\n\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\n\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n\n    try {\n      const res = await axios.post('/category/create', form);\n\n      if (res.status === 201) {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n          payload: {\n            category: res.data.category\n          }\n        });\n      } else {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n};\nexport const updateCategories = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.UPDATE_CATEGORIES_REQUEST\n    });\n    const res = await axios.post('/category/update', form);\n    console.log(res);\n\n    if (res.status === 201) {\n      dispatch(getAllCategory());\n      return true;\n    } else {\n      console.log(res);\n    }\n  };\n};\nexport const deleteCategories = ids => {\n  return async dispatch => {\n    const res = await axios.post('/category/delete', {\n      payload: {\n        ids\n      }\n    });\n\n    if (res.status === 201) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n};","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/actions/category.action.js"],"names":["axios","categoryConstants","getAllCategory","console","log","dispatch","type","GET_ALL_CATEGORIES_REQUEST","res","get","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","ADD_NEW_CATEGORY_FAILURE","response","updateCategories","UPDATE_CATEGORIES_REQUEST","deleteCategories","ids"],"mappings":"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","sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { categoryConstants } from \"./constants\";\r\n\r\nconst getAllCategory = () => {\r\n    console.log(\"I am working1 Entering dispatch\");\r\n\r\n    return async dispatch => {\r\n\r\n        console.log(\"I am working2 in dispatch\");\r\n\r\n        dispatch({ type: categoryConstants.GET_ALL_CATEGORIES_REQUEST });\r\n        const res = await axios.get('/category/getcategory');\r\n        console.log(res);\r\n\r\n        console.log(\"I am working3 dispatch cmpleted\");\r\n\r\n        if (res.status === 200) {\r\n\r\n            const { categoryList } = res.data;\r\n\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\r\n\r\n        try {\r\n            const res = await axios.post('/category/create', form);\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data.category }\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryConstants.UPDATE_CATEGORIES_REQUEST });\r\n\r\n        const res = await axios.post('/category/update', form);\r\n        console.log(res);\r\n\r\n        if (res.status === 201) {\r\n            dispatch(getAllCategory())\r\n            return true;\r\n        } else {\r\n            console.log(res);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n        const res = await axios.post('/category/delete', {\r\n            payload: { ids }\r\n        });\r\n\r\n        if (res.status === 201) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}