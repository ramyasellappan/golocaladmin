{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Signin\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { login } from '../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n/**\r\n* @author\r\n* @function Signin\r\n**/\n\nconst Signin = props => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string().min(5, 'Minimun 5 chars').required('Required')\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const userLogin = e => {\n    e.preventDefault();\n    const user = {\n      email,\n      password\n    };\n    dispatch(login(user));\n  };\n\n  if (auth.authenticate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: (formik.handleSubmit, userLogin),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({\n    label: \"Email\",\n    placeholder: \"Enter Email\",\n    value: email,\n    type: \"email\",\n    onChange: e => setEmail(e.target.value)\n  }, formik.getFieldProps('email'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(Input, Object.assign({\n    label: \"Password\",\n    placeholder: \"Password\",\n    value: password,\n    type: \"password\",\n    onChange: e => setPassword(e.target.value)\n  }, formik.getFieldProps('email'), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Signin/index.js"],"names":["React","useEffect","useState","Layout","Container","Form","Row","Col","Button","Input","login","useSelector","useDispatch","Redirect","useFormik","Yup","Signin","props","formik","initialValues","email","password","validationSchema","object","string","required","min","onSubmit","values","alert","JSON","stringify","setEmail","setPassword","error","setError","auth","state","dispatch","userLogin","e","preventDefault","user","authenticate","marginTop","span","offset","handleSubmit","target","value","getFieldProps","touched","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport { login } from '../../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n/**\r\n* @author\r\n* @function Signin\r\n**/\r\n\r\nconst Signin = (props) => {\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email('Invalid email address').required('Required'),\r\n      password: Yup.string()\r\n        .min(5, 'Minimun 5 chars')\r\n        .required('Required'),\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = (e) => {\r\n\r\n\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      email, password\r\n    }\r\n\r\n    dispatch(login(user));\r\n  }\r\n\r\n  if (auth.authenticate) {\r\n    return <Redirect to={'/'} />\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row style={{ marginTop: '50px' }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={formik.handleSubmit,userLogin}>\r\n              <Input\r\n                label=\"Email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                {...formik.getFieldProps('email')}\r\n              />\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div>{formik.errors.email}</div>\r\n              ) : null}\r\n              <Input\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                {...formik.getFieldProps('email')}\r\n\r\n              />\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div>{formik.errors.email}</div>\r\n              ) : null}\r\n              \r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    </Layout>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Signin;"]},"metadata":{},"sourceType":"module"}