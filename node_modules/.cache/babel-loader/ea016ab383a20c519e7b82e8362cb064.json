{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Signup\\\\index.js\";\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signup } from '../../actions';\n/**\r\n* @author\r\n* @function Signup\r\n**/\n\nconst Signup = props => {\n  {\n    /*\r\n     const[firstName,setFirstName]=useState('');\r\n     const[lastName,setLastName]=useState('');\r\n     const[email,setEmail]=useState('');\r\n     const[password,setPassword]=useState('');\r\n    const[error,setError]=useState('');*/\n  }\n  const auth = useSelector(state => state.auth);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  {\n    /*\r\n    const userSignup = (e) => {\r\n     e.preventDefault();\r\n    \n        const user = {\r\n          firstName,lastName,email,password\r\n        }\r\n    \n         dispatch(signup(user));\r\n    }\r\n    */\n  }\n\n  if (auth.authenticate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (user.loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, \"Loading....!\");\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    onSubmit: values => {\n      dispatch(signup(user));\n    },\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, ({\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    touched,\n    isValid,\n    errors\n  }) => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"First Name\",\n    type: \"text\",\n    placeholder: \"firstName\",\n    name: \"firstName\",\n    value: values.firstName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.firstName && errors.firstName,\n    errormessage: errors.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Last Name\",\n    type: \"text\",\n    placeholder: \"lastName\",\n    name: \"lastName\",\n    value: values.lastName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.lastName && errors.lastName,\n    errormessage: errors.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Email\",\n    type: \"email\",\n    placeholder: \"email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.email && errors.email,\n    errormessage: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.password && errors.password,\n    errormessage: errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Submit\")))))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Signup/index.js"],"names":["React","useState","Layout","Container","Form","Row","Col","Button","Input","Redirect","useDispatch","useSelector","signup","Signup","props","auth","state","user","dispatch","authenticate","loading","marginTop","span","offset","schema","values","firstName","lastName","email","password","handleSubmit","handleChange","handleBlur","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React ,{useState}from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {signup} from '../../actions';\r\n/**\r\n* @author\r\n* @function Signup\r\n**/\r\n\r\nconst Signup = (props) => {\r\n{/*\r\n  const[firstName,setFirstName]=useState('');\r\n  const[lastName,setLastName]=useState('');\r\n  const[email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\nconst[error,setError]=useState('');*/}\r\n  \r\n  \r\n  \r\n  const auth = useSelector(state => state.auth);\r\n  const user = useSelector(state => state.user)\r\n  const dispatch = useDispatch();\r\n{/*\r\nconst userSignup = (e) => {\r\n  e.preventDefault();\r\n\r\n     const user = {\r\n       firstName,lastName,email,password\r\n     }\r\n\r\n      dispatch(signup(user));\r\n}\r\n*/}\r\n\r\n\r\n  if (auth.authenticate) {\r\n    return <Redirect to={'/'} />\r\n  }\r\n\r\n  if(user.loading){\r\n    return <p>Loading....!</p>\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container >\r\n        <Row style={{ marginTop: '50px' }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n          <Formik\r\n              validationSchema={schema}\r\n              onSubmit={values => {  dispatch(signup(user)) }}\r\n              initialValues={{\r\n                firstName:'',\r\n                lastName:'',\r\n                email: '',\r\n                password: '',\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                errors,\r\n              }) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Input\r\n                      label=\"First Name\"\r\n                      type=\"text\"\r\n                      placeholder=\"firstName\"\r\n                      name=\"firstName\"\r\n                      value={values.firstName}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={touched.firstName && errors.firstName}\r\n                      errormessage={errors.firstName}\r\n                    />\r\n                    <Input\r\n                      label=\"Last Name\"\r\n                      type=\"text\"\r\n                      placeholder=\"lastName\"\r\n                      name=\"lastName\"\r\n                      value={values.lastName}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={touched.lastName && errors.lastName}\r\n                      errormessage={errors.lastName}\r\n                    />\r\n\r\n                    <Input\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      placeholder=\"email\"\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={touched.email && errors.email}\r\n                      errormessage={errors.email}\r\n                    />\r\n\r\n                    <Input\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      name=\"password\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isInvalid={touched.password && errors.password}\r\n                      errormessage={errors.password}\r\n                    />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n            </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}