{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Signin\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { login } from '../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n/**\r\n* @author\r\n* @function Signin\r\n**/\n\nconst Signin = props => {\n  {\n    /*const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');*/\n  }\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  {\n    /*const userLogin = (e) => {\r\n    \n     e.preventDefault();\r\n       const user = {\r\n       email, password\r\n     }\r\n       dispatch(login(user));\r\n    }\r\n    */\n  }\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string().min(5, 'Minimun 5 chars').required('Required')\n    }),\n    onSubmit: values => {\n      dispatch(login(values));\n    }\n  });\n\n  if (auth.authenticate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"email\",\n    placeholder: \"Enter Email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(Input, {\n    label: \"password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, formik.errors.password) : null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Signin/index.js"],"names":["React","useEffect","useState","Layout","Container","Form","Row","Col","Button","Input","login","useSelector","useDispatch","Redirect","useFormik","Yup","Signin","props","auth","state","dispatch","formik","initialValues","email","password","validationSchema","object","string","required","min","onSubmit","values","authenticate","marginTop","span","offset","handleSubmit","touched","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport { login } from '../../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n/**\r\n* @author\r\n* @function Signin\r\n**/\r\n\r\nconst Signin = (props) => {\r\n\r\n  {/*const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\nconst [error, setError] = useState('');*/}\r\n\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  {/*const userLogin = (e) => {\r\n\r\n\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      email, password\r\n    }\r\n\r\n    dispatch(login(user));\r\n  }\r\n*/}\r\n  \r\nconst formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n\r\n      email: Yup.string().email('Invalid email address').required('Required'),\r\n      password: Yup.string()\r\n        .min(5, 'Minimun 5 chars')\r\n        .required('Required'),\r\n\r\n    }),\r\n    onSubmit:\r\n      values => {\r\n        dispatch(login(values));\r\n      },\r\n  });\r\n\r\n\r\n\r\n  if (auth.authenticate) {\r\n    return <Redirect to={'/'} />\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row style={{ marginTop: '50px' }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n\r\n\r\n         {/*}\r\n            <form onSubmit={formik.handleSubmit}>\r\n\r\n              <label htmlFor=\"email\">Email Address</label>\r\n              <input id=\"email\" type=\"email\"\r\n             {...formik.getFieldProps('email')} />\r\n\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div>{formik.errors.email}</div>\r\n              ) : null}\r\n             <br/>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input id=\"password\" type=\"password\" {...formik.getFieldProps('password')} />\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div>{formik.errors.password}</div>\r\n              ) : null}\r\n              <br />\r\n              <button type=\"submit\">Submit</button>\r\n            </form>\r\n              */}\r\n\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              \r\n\r\n                <Input\r\n                  label=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  type=\"email\"\r\n                />\r\n\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div>{formik.errors.email}</div>\r\n                ) : null}\r\n              \r\n\r\n              \r\n                <Input\r\n                  label=\"password\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n\r\n                />\r\n                {formik.touched.password && formik.errors.password ? (\r\n                  <div>{formik.errors.password}\r\n                  </div>\r\n                ) : null}\r\n              \r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n                \r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    </Layout>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Signin;"]},"metadata":{},"sourceType":"module"}