{"ast":null,"code":"import { categoryConstants } from '../actions/constants';\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {\n    if (cat.parentId && cat.parentId == id) {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(id, [...cat.children, {}], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(id, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const updateCategories = buildNewCategories(state.categories, action.payload.category);\n      console.log(updateCategories);\n      state = { ...state,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","category","myCategories","cat","parentId","id","push","children","length","state","action","type","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updateCategories","console","log","ADD_NEW_CATEGORY_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,EADE;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;;AAOA,MAAMC,kBAAkB,GAAG,CAACH,UAAD,EAAaI,QAAb,KAA0B;AACjD,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,GAAT,IAAgBN,UAAhB,EAA4B;AAExB,QAAIM,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,IAAgBC,EAApC,EAAwC;AACpCH,MAAAA,YAAY,CAACI,IAAb,CAAkB,EACd,GAAGH,GADW;AAEdI,QAAAA,QAAQ,EAAEJ,GAAG,CAACI,QAAJ,IAAgBJ,GAAG,CAACI,QAAJ,CAAaC,MAAb,GAAsB,CAAtC,GAA0CR,kBAAkB,CAACK,EAAD,EAAI,CAAC,GAAGF,GAAG,CAACI,QAAR,EAAiB,EAAjB,CAAJ,EAElEN,QAFkE,CAA5D,GAEM;AAJF,OAAlB;AAOH,KARD,MAQK;AACDC,MAAAA,YAAY,CAACI,IAAb,CAAkB,EACd,GAAGH,GADW;AAEdI,QAAAA,QAAQ,EAAEJ,GAAG,CAACI,QAAJ,IAAgBJ,GAAG,CAACI,QAAJ,CAAaC,MAAb,GAAsB,CAAtC,GAA0CR,kBAAkB,CAACK,EAAD,EAAIF,GAAG,CAACI,QAAR,EAAiBN,QAAjB,CAA5D,GAAyF;AAFrF,OAAlB;AAIH;AAEJ;;AACD,SAAOC,YAAP;AACH,CArBD;;AAyBA,gBAAe,CAACO,KAAK,GAAGb,SAAT,EAAoBc,MAApB,KAA+B;AAE1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,iBAAiB,CAACiB,0BAAvB;AACIH,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJZ,QAAAA,UAAU,EAAEa,MAAM,CAACG,OAAP,CAAehB;AAFvB,OAAR;AAIA;;AACJ,SAAKF,iBAAiB,CAACmB,wBAAvB;AACIL,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJX,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,iBAAiB,CAACoB,wBAAvB;AACI,YAAMC,gBAAgB,GAAGhB,kBAAkB,CAACS,KAAK,CAACZ,UAAP,EAAmBa,MAAM,CAACG,OAAP,CAAeZ,QAAlC,CAA3C;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACAP,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJX,QAAAA,OAAO,EAAE;AAFL,OAAR;AAMA;;AACJ,SAAKH,iBAAiB,CAACwB,wBAAvB;AACIV,MAAAA,KAAK,GAAG,EACJ,GAAGb;AADC,OAAR;AAIA;AA5BR;;AA8BA,SAAOa,KAAP;AACH,CAjCD","sourcesContent":["import { categoryConstants } from '../actions/constants';\r\n\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n\r\nconst buildNewCategories = (categories, category) => {\r\n    let myCategories = [];\r\n    for (let cat of categories) {\r\n\r\n        if (cat.parentId && cat.parentId == id) {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children && cat.children.length > 0 ? buildNewCategories(id,[...cat.children,{\r\n                    \r\n                }], category) : []\r\n            \r\n            });\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children && cat.children.length > 0 ? buildNewCategories(id,cat.children,category) : []\r\n            });\r\n        }\r\n\r\n    }\r\n    return myCategories;\r\n}\r\n\r\n\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const updateCategories = buildNewCategories(state.categories, action.payload.category);\r\n            console.log(updateCategories);\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n\r\n\r\n            }\r\n            break;\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState,\r\n\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}