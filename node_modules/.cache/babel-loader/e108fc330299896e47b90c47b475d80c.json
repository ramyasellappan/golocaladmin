{"ast":null,"code":"import { authConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post('/admin/signin', { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'Failed to Login'\n        }\n      });\n    }\n  };\n};\nexport const Signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    const res = await axios.post('/admin/signout');\n\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGOUT_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/actions/auth.actions.js"],"names":["authConstants","axios","login","user","console","log","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem","parse","Signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","LOGOUT_FAILURE"],"mappings":"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","sourcesContent":["import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const login = (user) => {\r\n\r\n  console.log(user);\r\n\r\n  return async (dispatch) => {\r\n\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n    const res = await axios.post('/admin/signin', {\r\n      ...user\r\n    })\r\n\r\n\r\n    if (res.status === 200) {\r\n\r\n      const { token, user } = res.data;\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token, user\r\n        }\r\n      });\r\n    } else {\r\n      if (res.status === 400) {\r\n        dispatch({\r\n          type: authConstants.LOGIN_FAILURE,\r\n          payload: { error: res.data.error }\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const isUserLoggedIn = () => {\r\n  return async dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token, user\r\n        }\r\n      });\r\n    } else {\r\n\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { error: 'Failed to Login' }\r\n\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const Signout = () => {\r\n\r\n  return async dispatch => {\r\n\r\n    dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n\r\n    const res = await axios.post('/admin/signout');\r\n    \r\n    if (res.status === 200) {\r\n      localStorage.clear();\r\n      dispatch({type: authConstants.LOGOUT_SUCCESS });\r\n    }else{\r\n      dispatch({\r\n        type: authConstants.LOGOUT_FAILURE,\r\n        payload: { error: res.data.error }\r\n\r\n      });\r\n\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}