{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Products\\\\index.js\";\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { useDispatch, useSelector } from 'react-redux';\n/**\r\n* @author\r\n* @function Products\r\n**/\n\nconst Products = props => {\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', name);\n    form.append('quantity', quantity);\n    form.append('price', price);\n    form.append('description', description);\n    form.append('category', category);\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleProductPictures = e => {\n    setProductPictures([...productPictures, e.target.files[0]]);\n  };\n\n  console.log(productPictures);\n  return /*#__PURE__*/React.createElement(Layout, {\n    sidebar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Add\"))))), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Add New Category\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Product Name\",\n    placeholder: 'Product Name',\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Quantity\",\n    placeholder: 'Quantity',\n    value: quantity,\n    onChange: e => setQuantity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Price\",\n    placeholder: 'Price',\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Description\",\n    placeholder: 'Description',\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: categoryId,\n    onChange: e => setCategoryId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"select category\"), createCategoryList(category.categories).map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, option.name))), productPictures.length > 0 ? productPictures.map((pic, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 65\n    }\n  }, pic.name)) : null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"productPicture\",\n    onChange: handleProductPictures,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Save Changes\"))));\n};\n\nexport default Products;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Products/index.js"],"names":["React","useState","Layout","Container","Row","Col","Modal","Button","Input","useDispatch","useSelector","Products","props","name","setName","quantity","setQuantity","price","setPrice","description","setDescription","categoryId","setCategoryId","productPictures","setProductPictures","show","setShow","category","state","dispatch","handleClose","form","FormData","append","handleShow","createCategoryList","categories","options","push","value","_id","children","length","handleProductPictures","e","target","files","console","log","display","justifyContent","map","option","pic","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/**\r\n* @author\r\n* @function Products\r\n**/\r\n\r\nconst Products = (props) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [productPictures, setProductPictures] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const category = useSelector(state => state.category);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleClose = () => {\r\n     const form = new FormData();\r\n     form.append('name',name);\r\n     form.append('quantity',quantity);\r\n     form.append('price',price);\r\n     form.append('description',description);\r\n     form.append('category',category);\r\n\r\n\r\n     \r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n\r\n    const handleProductPictures = (e) => {\r\n        setProductPictures([\r\n            ...productPictures,\r\n            e.target.files[0]\r\n        ]);\r\n    }\r\n    console.log(productPictures);\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Products</h3>\r\n                            <button onClick={handleShow}>Add</button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Category</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Input\r\n                        label=\"Product Name\"\r\n                        placeholder={'Product Name'}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n\r\n                    />\r\n                    <Input\r\n                        label=\"Quantity\"\r\n                        placeholder={'Quantity'}\r\n                        value={quantity}\r\n                        onChange={(e) => setQuantity(e.target.value)}\r\n\r\n                    />\r\n                    <Input\r\n                        label=\"Price\"\r\n                        placeholder={'Price'}\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n\r\n                    />\r\n                    <Input\r\n                        label=\"Description\"\r\n                        placeholder={'Description'}\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n\r\n                    />\r\n                    <select\r\n                        className=\"form-control\"\r\n                        value={categoryId}\r\n                        onChange={(e) => setCategoryId(e.target.value)}\r\n                    >\r\n                        <option>select category</option>\r\n                        {\r\n                            createCategoryList(category.categories).map(option =>\r\n                                <option key={option.value} value={option.value}>{option.name}</option>)\r\n                        }\r\n                    </select>\r\n                    {\r\n                        productPictures.length > 0 ?\r\n                            productPictures.map((pic, index) => <div key={index}>{pic.name}</div>) : null\r\n                    }\r\n\r\n                    <input type=\"file\" name=\"productPicture\" onChange={handleProductPictures} />\r\n\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Products"]},"metadata":{},"sourceType":"module"}