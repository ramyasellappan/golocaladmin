{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\components\\\\UI\\\\Input\\\\index.js\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n/**\r\n* @author\r\n* @function Input\r\n**/\n\nconst Input = props => {\n  let input = null;\n\n  switch (props.type) {\n    case 'select':\n      input = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, props.label && /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 33\n        }\n      }, props.label), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: props.value,\n        onChange: props.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, props.placeholder), props.options.length > 0 ? props.options.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, option.name)) : null));\n      break;\n\n    case 'text':\n    default:\n      input = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, props.label && /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, props.label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        type: props.type,\n        placeholder: props.placeholder,\n        name: props.name,\n        value: props.value,\n        onChange: props.onChange,\n        onBlur: props.onBlur,\n        isInvalid: props.isInvalid\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, props.errormessage));\n  }\n\n  return input;\n};\n\nexport default Input;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/components/UI/Input/index.js"],"names":["React","Form","Input","props","input","type","label","value","onChange","placeholder","options","length","map","option","index","name","onBlur","isInvalid","errormessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA;;;;;AAKA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAGrB,MAAIC,KAAK,GAAG,IAAZ;;AACA,UAAQD,KAAK,CAACE,IAAd;AACI,SAAK,QAAL;AACID,MAAAA,KAAK,gBAAG,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHD,KAAK,CAACG,KAAN,iBAAe,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaH,KAAK,CAACG,KAAnB,CADZ,eAEJ;AACI,QAAA,SAAS,EAAC,8BADd;AAEI,QAAA,KAAK,EAAEH,KAAK,CAACI,KAFjB;AAGI,QAAA,QAAQ,EAAEJ,KAAK,CAACK,QAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBL,KAAK,CAACM,WAAxB,CALJ,EAOQN,KAAK,CAACO,OAAN,CAAcC,MAAd,GAAuB,CAAvB,GACIR,KAAK,CAACO,OAAN,CAAcE,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,kBACd;AAAQ,QAAA,GAAG,EAAEA,KAAb;AAAoB,QAAA,KAAK,EAAED,MAAM,CAACN,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CM,MAAM,CAACE,IAAjD,CADJ,CADJ,GAGQ,IAVhB,CAFI,CAAR;AAgBA;;AACJ,SAAK,MAAL;AAEA;AAEIX,MAAAA,KAAK,gBAAG,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHD,KAAK,CAACG,KAAN,iBAAe,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaH,KAAK,CAACG,KAAnB,CADZ,eAEJ,oBAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAEH,KAAK,CAACE,IADhB;AAEI,QAAA,WAAW,EAAEF,KAAK,CAACM,WAFvB;AAGI,QAAA,IAAI,EAAEN,KAAK,CAACY,IAHhB;AAII,QAAA,KAAK,EAAEZ,KAAK,CAACI,KAJjB;AAKI,QAAA,QAAQ,EAAEJ,KAAK,CAACK,QALpB;AAMI,QAAA,MAAM,EAAEL,KAAK,CAACa,MANlB;AAOI,QAAA,SAAS,EAAEb,KAAK,CAACc;AAPrB,SAQQd,KARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFI,eAYJ,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,KAAK,CAACe,YADX,CAZI,CAAR;AAvBR;;AAwCA,SAAOd,KAAP;AAEH,CA9CD;;AAgDA,eAAeF,KAAf","sourcesContent":["import React from 'react'\r\nimport { Form } from 'react-bootstrap';\r\n\r\n/**\r\n* @author\r\n* @function Input\r\n**/\r\n\r\nconst Input = (props) => {\r\n\r\n\r\n    let input = null;\r\n    switch (props.type) {\r\n        case 'select':\r\n            input = <Form.Group>\r\n                {props.label && <Form.Label>{props.label}</Form.Label>}\r\n                <select\r\n                    className=\"form-control form-control-sm\"\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                >\r\n                    <option value=\"\">{props.placeholder}</option>\r\n                    {\r\n                        props.options.length > 0 ?\r\n                            props.options.map((option, index) =>\r\n                                <option key={index} value={option.value}>{option.name}</option>\r\n                            ) : null\r\n                    }\r\n                </select>\r\n            </Form.Group>\r\n            break;\r\n        case 'text':\r\n\r\n        default:\r\n\r\n            input = <Form.Group>\r\n                {props.label && <Form.Label>{props.label}</Form.Label>}\r\n                <Form.Control\r\n                    type={props.type}\r\n                    placeholder={props.placeholder}\r\n                    name={props.name}\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                    onBlur={props.onBlur}\r\n                    isInvalid={props.isInvalid}\r\n                    {...props}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {props.errormessage}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n    }\r\n    return input;\r\n\r\n}\r\n\r\nexport default Input"]},"metadata":{},"sourceType":"module"}