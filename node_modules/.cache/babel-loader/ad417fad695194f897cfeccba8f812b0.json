{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT PROJECTS\\\\my-app\\\\src\\\\containers\\\\Signin\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { login } from '../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n/**\r\n* @author\r\n* @function Signin\r\n**/\n\nconst Signin = props => {\n  {\n    /*const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');*/\n  }\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  {\n    /*const userLogin = (e) => {\r\n    \n     e.preventDefault();\r\n       const user = {\r\n       email, password\r\n     }\r\n       dispatch(login(user));\r\n    }\r\n    */\n  } /////\n  ////\n\n  {\n    /* \r\n    const formik = useFormik({\r\n     initialValues: {\r\n       email: '',\r\n       password: ''\r\n     },\r\n    \r\n     validationSchema: Yup.object({\r\n         email: Yup.string().email('Invalid email address').required('Required'),\r\n       password: Yup.string()\r\n         .min(5, 'Minimun 5 chars')\r\n         .required('Required'),\r\n       }),\r\n     onSubmit:\r\n       values => {\r\n         dispatch(login(values));\r\n         console.log(values);\r\n         },\r\n    });\r\n    */\n  }\n  const schema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required')\n  });\n\n  if (auth.authenticate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    validationSchema: schema,\n    onSubmit: values => {\n      dispatch(login(values));\n    },\n    initialValues: {\n      email: '',\n      password: '',\n      username: ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, ({\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    touched,\n    isValid,\n    errors\n  }) => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Email\",\n    type: \"email\",\n    placeholder: \"email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.email && errors.email,\n    errormessage: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    isInvalid: touched.password && errors.password,\n    errormessage: errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Submit form\"))))))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["D:/REACT PROJECTS/my-app/src/containers/Signin/index.js"],"names":["React","useEffect","useState","Layout","Container","Form","Row","Col","Button","Input","login","useSelector","useDispatch","Redirect","Formik","Yup","Signin","props","auth","state","dispatch","schema","object","email","string","required","password","authenticate","marginTop","span","offset","values","username","handleSubmit","handleChange","handleBlur","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport { login } from '../../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n/**\r\n* @author\r\n* @function Signin\r\n**/\r\n\r\nconst Signin = (props) => {\r\n\r\n  {/*const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\nconst [error, setError] = useState('');*/}\r\n\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  {/*const userLogin = (e) => {\r\n\r\n\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      email, password\r\n    }\r\n\r\n    dispatch(login(user));\r\n  }\r\n*/}\r\n  /////\r\n  ////\r\n  {/* \r\nconst formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n   \r\n    validationSchema: Yup.object({\r\n\r\n      email: Yup.string().email('Invalid email address').required('Required'),\r\n      password: Yup.string()\r\n        .min(5, 'Minimun 5 chars')\r\n        .required('Required'),\r\n\r\n    }),\r\n    onSubmit:\r\n      values => {\r\n        dispatch(login(values));\r\n        console.log(values);\r\n\r\n      },\r\n  });\r\n\r\n*/}\r\nconst schema = Yup.object({\r\n\r\n  email: Yup.string().email('Invalid email address').required('Required'),\r\n  password: Yup.string().required('Required'),\r\n\r\n\r\n});\r\n  if (auth.authenticate) {\r\n    return <Redirect to={'/'} />\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row style={{ marginTop: '50px' }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Formik\r\n              validationSchema={schema}\r\n              onSubmit = {values => {dispatch(login(values))}}\r\n              initialValues={{\r\n                email: '',\r\n                password: '',\r\n                username: '',\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                errors,\r\n              }) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Container>\r\n\r\n                      <Input\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        placeholder=\"email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={touched.email && errors.email}\r\n                        errormessage={errors.email}\r\n                      />\r\n\r\n                      <Input\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={touched.password && errors.password}\r\n                        errormessage={errors.password}\r\n\r\n                      />\r\n\r\n\r\n                    <Button type=\"submit\">Submit form</Button>\r\n                    </Container>\r\n\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Signin;"]},"metadata":{},"sourceType":"module"}